<?xml version="1.0" encoding="UTF-8"?>
<project name="EAR Builder" default="usage" basedir=".">
	<property file="../build.properties" />
	<property name="build" location="Build" />
	<property name="product" location="${build}/product" />
	<property name="staging" location="${build}/staging" />
	<property name="wars" location="${build}/wars" />
	<property name="deployable-plugins" location="${product}/plugins" />
	<property name="withheld-plugins" location="${product}/withheld-plugins" />
	<property name="themes" location="${build}/themes" />
	<property name="language-packs" location="${build}/language-packs" />
	<property name="prev.langpack.url" value="http://maestro.equella.com/file/527661ac-9631-472e-96ea-7b224848b583/1/reference-language-pack.zip" />
	<property name="current.langpack" value="${language-packs}/reference-language-pack.zip" />
	<import file="${TLE Plugins.base}/build/withheld.xml" />
	<import file="common-tasks.xml" />
	
	<target name="usage">
		<echo>Use one of the following commands:</echo>
		<echo>ant download-jars</echo>
		<echo>ant learningedge-website</echo>
		<echo>ant conversion-service</echo>
		<echo>ant equella-plugins</echo>
		<echo>ant themes</echo>
		<echo>ant language-pack</echo>
		<echo>ant language-pack-diff</echo>
		<echo>ant build-everything</echo>
	</target>
	
	<target name="build-everything" depends="clean,download-jars,equella-plugins,learningedge-website,conversion-service,themes,language-pack,language-pack-diff" />
	
	<target name="learningedge-website" depends="equella-plugins">
		<copy toDir="${product}">
			<!-- <fileset file="${TLE Resource Centre.base}/product/resource-centre.war" /> -->
			<fileset file="${EQUELLA Server.base}/product/equella-server.jar" />
			<fileset file="${TLE Installation Upgrader.base}/product/database-upgrader.jar" />
		</copy>
	</target>
	
	<target name="conversion-service">
		<ant inheritAll="false" target="product" dir="${TLE Conversion.base}" />
		<copy toDir="${product}" file="${TLE Conversion.base}/product/conversion-service.jar" />
	</target>
	
	<target name="equella-plugins">
		<!-- Build all of the plug-ins first -->
		<subant target="product" buildpath="${TLE Plugins.base}/build" />
		<!-- Copy over deployable plug-ins, ie, shipped as standard with the product -->
		<mkdir dir="${deployable-plugins}" />
		<copy toDir="${deployable-plugins}">
			<fileset dir="${TLE Plugins.base}">
				<and>
					<filename name="**/product/*.jar" />
					<not>
						<selector refid="withheld.selector" />
					</not>
				</and>
			</fileset>
			<fileset dir="${source.base}/Interface/Plugins">
				<and>
					<filename name="**/product/*.jar" />
				</and>
			</fileset>
			<regexpmapper from="^(.*)/[^/]+/product/(.*)$" to="\1/\2" handledirsep="true" />
		</copy>
		<mkdir dir="${deployable-plugins}/Platform" />
		<copy toDir="${deployable-plugins}/Platform">
			<fileset dir="${source.base}/Platform/Plugins">
				<and>
					<filename name="**/product/*.jar" />
				</and>
			</fileset>
			<regexpmapper from="^(.*)/?[^/]+/product/(.*)$" to="\2" handledirsep="true" />
		</copy>
		<mkdir dir="${deployable-plugins}/Interface" />
		<copy toDir="${deployable-plugins}/Interface">
			<fileset dir="${source.base}/Interface/Plugins">
				<and>
					<filename name="**/product/*.jar" />
				</and>
			</fileset>
			<regexpmapper from="^(.*)/?[^/]+/product/(.*)$" to="\2" handledirsep="true" />
		</copy>
		<copy toDir="${deployable-plugins}">
			<fileset dir="${TLE Plugins.base}">
				<include name="${External Dependencies.resource}/*.jar" />
			</fileset>
		</copy>
		<!-- Copy over withheld plug-ins, ie, built but not shipped by default -->
		<mkdir dir="${withheld-plugins}" />
		<copy toDir="${withheld-plugins}">
			<fileset dir="${TLE Plugins.base}">
				<and>
					<selector refid="withheld.selector" />
					<filename name="**/product/*.jar" />
				</and>
			</fileset>
			<regexpmapper from="^(.*)/[^/]+/product/(.*)$" to="\1/\2" handledirsep="true" />
		</copy>
	</target>
	
	<target name="equella-plugins-clean">
		<subant target="clean" buildpath="${TLE Plugins.base}/build" />
	</target>
	
	<target name="equella-plugins-generate-source">
		<subant target="generate-source" buildpath="${TLE Plugins.base}/build" />
	</target>
	
	<target name="clean">
		<delete dir="${product}" />
		<delete dir="${staging}" />
		<mkdir dir="${product}" />
		<mkdir dir="${staging}" />
	</target>
	
	<target name="themes">
		<ant inheritAll="false" target="product" dir="Themes" />
		<copy toDir="${themes}">
			<fileset dir="Themes" includes="*.zip" />
		</copy>
	</target>
	
	<target name="language-pack">
		<mkdir dir="${language-packs}" />
		<taskdef classname="com.tle.ant.ReferenceLanguagePack" name="referenceLanguagePack" classpathref="customtasks.classpath" />
		<referenceLanguagePack dest="${language-packs}/reference-language-pack.zip" />
	</target>
		
	<target name="download-jars">
		<subant target="make" buildpath="${TLE Custom Build Tasks.base}" />
		<taskdef classname="com.tle.ant.dependencies.DownloadJars" name="downloadJars" classpathref="customtasks.classpath" />
		<delete>
			<fileset dir="${TLE Plugins.base}/External">
				<include name="*.jar" />
				<include name="*.zip" />
				<include name="lib-src/*" />
			</fileset>
		</delete>
		<downloadJars createJpf="true" createClasspath="true" destDir="${TLE Plugins.base}/External" sourcesDir="${TLE Plugins.base}/External/lib-src">
			<repository id="local" url="file://${user.home}/equella-deps"/>
			<repository id="maven" url="http://repo1.maven.org/maven2/"/>
			<fileset file="dependencies/deps.txt" />
			<fileset file="${source.base}/Platform/Plugins/ExternalPlatform/deps.txt" />
			<fileset file="${source.base}/Interface/Build/deps.txt" />
		</downloadJars>
		<delete>
			<fileset dir="${source.base}/Source/Tools/ToolDependencies">
				<include name="*.jar" />
				<include name="*.zip" />
				<include name="lib-src/*" />
			</fileset>
		</delete>
		<downloadJars createJpf="true" createClasspath="true" destDir="${source.base}/Source/Tools/ToolDependencies" sourcesDir="${source.base}/Source/Tools/ToolDependencies/lib-src">			
			<repository id="local" url="file://${user.home}/equella-deps"/>
			<repository id="maven" url="http://repo1.maven.org/maven2/"/>
			<fileset file="dependencies/deps.txt" />
			<fileset file="dependencies/tool-deps.txt" />
			<fileset file="${source.base}/Platform/Plugins/ExternalPlatform/deps.txt" />
		</downloadJars>
		<delete>
			<fileset dir="${source.base}/Interface/Dependencies">
				<include name="*.jar" />
				<include name="*.zip" />
				<include name="lib-src/*" />
			</fileset>
		</delete>
		<downloadJars createJpf="true" createClasspath="true" destDir="${source.base}/Interface/Dependencies" sourcesDir="${source.base}/Interface/Dependencies/lib-src">			
			<repository id="local" url="file://${user.home}/equella-deps"/>
			<repository id="maven" url="http://repo1.maven.org/maven2/"/>
			<fileset file="dependencies/deps.txt" />
			<fileset file="${source.base}/Platform/Plugins/ExternalPlatform/deps.txt" />
			<fileset file="${source.base}/Interface/Build/deps.txt" />
		</downloadJars>
		<copy file="${TLE Custom Build Tasks.base}/lib/ecj.jar" tofile="${user.home}/.ant/lib/ecj.jar" />
	</target>
	
	<target name="language-pack-diff" depends="clean,language-pack">
		<mkdir dir="${staging}/diff-reference-language-pack" />
		<get src="${prev.langpack.url}" dest="${staging}/prev-reference-language-pack.zip" verbose="true" />
		<unzip src="${staging}/prev-reference-language-pack.zip" dest="${staging}/previous-reference-language-pack" />
		<unzip src="${current.langpack}" dest="${staging}/current-reference-language-pack" />
		<taskdef classname="com.tle.ant.LanguagePackDiff" name="languagePackDiff" classpathref="customtasks.classpath" />
		<languagePackDiff previous="${staging}/previous-reference-language-pack" current="${staging}/current-reference-language-pack" diff="${staging}/diff-reference-language-pack" />
		<zip destfile="${language-packs}/language-pack-diff.zip" basedir="${staging}/diff-reference-language-pack" />
	</target>
</project>
