<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/"
	xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
	xmlns:tns="LcmsWebSvc" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
	xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="LcmsWebSvc"
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
	<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;This WebService connects TLE's LCMS to
		JAM Web Services Pty. Ltd.'s GPRime system, providing log in authentication and user management
		via TLE's UserManagementPlugin interface.&lt;/b&gt;&lt;br&gt;This WebService DOES NOT make any use
		of the submitted UserState token information at the moment but may implement
		process-authentication later.</wsdl:documentation>
	<wsdl:types>
		<s:schema elementFormDefault="qualified" targetNamespace="LcmsWebSvc">
			<s:element name="authenticateUser">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inUsername" type="s:string" />
						<s:element minOccurs="0" maxOccurs="1" name="inPassword" type="s:string" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="authenticateUserResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="authenticateUserResult" type="tns:UserState" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:complexType name="UserState">
				<s:sequence>
					<s:element minOccurs="0" maxOccurs="1" name="ub" type="tns:UserBean" />
				</s:sequence>
			</s:complexType>
			<s:complexType name="UserBean">
				<s:sequence>
					<s:element minOccurs="0" maxOccurs="1" name="UniqueID" type="s:string" />
					<s:element minOccurs="0" maxOccurs="1" name="Username" type="s:string" />
					<s:element minOccurs="0" maxOccurs="1" name="FirstName" type="s:string" />
					<s:element minOccurs="0" maxOccurs="1" name="LastName" type="s:string" />
					<s:element minOccurs="0" maxOccurs="1" name="EmailAddress" type="s:string" />
				</s:sequence>
			</s:complexType>
			<s:element name="authenticateUserFromUsername">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inUsername" type="s:string" />
						<s:element minOccurs="0" maxOccurs="1" name="inPrivateData" type="s:string" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="authenticateUserFromUsernameResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="authenticateUserFromUsernameResult"
							type="tns:UserState" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="getGroupsContainingUser">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inState" type="tns:UserState" />
						<s:element minOccurs="0" maxOccurs="1" name="inUserID" type="s:string" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="getGroupsContainingUserResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="getGroupsContainingUserResult" type="tns:ArrayOfGroupBean" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:complexType name="ArrayOfGroupBean">
				<s:sequence>
					<s:element minOccurs="0" maxOccurs="unbounded" name="GroupBean" nillable="true"
						type="tns:GroupBean" />
				</s:sequence>
			</s:complexType>
			<s:complexType name="GroupBean">
				<s:sequence>
					<s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
					<s:element minOccurs="0" maxOccurs="1" name="UniqueID" type="s:string" />
				</s:sequence>
			</s:complexType>
			<s:element name="getInformationForGroups">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inState" type="tns:UserState" />
						<s:element minOccurs="0" maxOccurs="1" name="inGroupIDs" type="tns:ArrayOfString" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:complexType name="ArrayOfString">
				<s:sequence>
					<s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" />
				</s:sequence>
			</s:complexType>
			<s:element name="getInformationForGroupsResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="getInformationForGroupsResult" type="tns:ArrayOfGroupBean" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="getInformationForUsers">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inState" type="tns:UserState" />
						<s:element minOccurs="0" maxOccurs="1" name="inUserIDs" type="tns:ArrayOfString" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="getInformationForUsersResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="getInformationForUsersResult" type="tns:ArrayOfUserBean" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:complexType name="ArrayOfUserBean">
				<s:sequence>
					<s:element minOccurs="0" maxOccurs="unbounded" name="UserBean" nillable="true"
						type="tns:UserBean" />
				</s:sequence>
			</s:complexType>
			<s:element name="getUsersInGroup">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inState" type="tns:UserState" />
						<s:element minOccurs="0" maxOccurs="1" name="inGroupID" type="s:string" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="getUsersInGroupResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="getUsersInGroupResult" type="tns:ArrayOfUserBean" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="searchGroups">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inState" type="tns:UserState" />
						<s:element minOccurs="0" maxOccurs="1" name="inQuery" type="s:string" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="searchGroupsResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="searchGroupsResult" type="tns:ArrayOfGroupBean" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="searchUsers">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="inState" type="tns:UserState" />
						<s:element minOccurs="0" maxOccurs="1" name="inQuery" type="s:string" />
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="searchUsersResponse">
				<s:complexType>
					<s:sequence>
						<s:element minOccurs="0" maxOccurs="1" name="searchUsersResult" type="tns:ArrayOfUserBean" />
					</s:sequence>
				</s:complexType>
			</s:element>
		</s:schema>
	</wsdl:types>
	<wsdl:message name="authenticateUserSoapIn">
		<wsdl:part name="parameters" element="tns:authenticateUser" />
	</wsdl:message>
	<wsdl:message name="authenticateUserSoapOut">
		<wsdl:part name="parameters" element="tns:authenticateUserResponse" />
	</wsdl:message>
	<wsdl:message name="authenticateUserFromUsernameSoapIn">
		<wsdl:part name="parameters" element="tns:authenticateUserFromUsername" />
	</wsdl:message>
	<wsdl:message name="authenticateUserFromUsernameSoapOut">
		<wsdl:part name="parameters" element="tns:authenticateUserFromUsernameResponse" />
	</wsdl:message>
	<wsdl:message name="getGroupsContainingUserSoapIn">
		<wsdl:part name="parameters" element="tns:getGroupsContainingUser" />
	</wsdl:message>
	<wsdl:message name="getGroupsContainingUserSoapOut">
		<wsdl:part name="parameters" element="tns:getGroupsContainingUserResponse" />
	</wsdl:message>
	<wsdl:message name="getInformationForGroupsSoapIn">
		<wsdl:part name="parameters" element="tns:getInformationForGroups" />
	</wsdl:message>
	<wsdl:message name="getInformationForGroupsSoapOut">
		<wsdl:part name="parameters" element="tns:getInformationForGroupsResponse" />
	</wsdl:message>
	<wsdl:message name="getInformationForUsersSoapIn">
		<wsdl:part name="parameters" element="tns:getInformationForUsers" />
	</wsdl:message>
	<wsdl:message name="getInformationForUsersSoapOut">
		<wsdl:part name="parameters" element="tns:getInformationForUsersResponse" />
	</wsdl:message>
	<wsdl:message name="getUsersInGroupSoapIn">
		<wsdl:part name="parameters" element="tns:getUsersInGroup" />
	</wsdl:message>
	<wsdl:message name="getUsersInGroupSoapOut">
		<wsdl:part name="parameters" element="tns:getUsersInGroupResponse" />
	</wsdl:message>
	<wsdl:message name="searchGroupsSoapIn">
		<wsdl:part name="parameters" element="tns:searchGroups" />
	</wsdl:message>
	<wsdl:message name="searchGroupsSoapOut">
		<wsdl:part name="parameters" element="tns:searchGroupsResponse" />
	</wsdl:message>
	<wsdl:message name="searchUsersSoapIn">
		<wsdl:part name="parameters" element="tns:searchUsers" />
	</wsdl:message>
	<wsdl:message name="searchUsersSoapOut">
		<wsdl:part name="parameters" element="tns:searchUsersResponse" />
	</wsdl:message>
	<wsdl:portType name="LcmsWebServiceSoap">
		<wsdl:operation name="authenticateUser">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns User information based on
				their Username and Password&lt;/b&gt;&lt;br&gt;An empty UserData object indicates an
				unsuccessful login attempt and is caused by one of three things - wrong username, wrong password
				or the RTP having blocked access to the LCMS for that user from within GPRime User Management.</wsdl:documentation>
			<wsdl:input message="tns:authenticateUserSoapIn" />
			<wsdl:output message="tns:authenticateUserSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="authenticateUserFromUsername">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns User information based on
				their Username&lt;/b&gt;&lt;br&gt;An empty UserData object indicates an unsuccessful login
				attempt and is caused by one of two things - wrong username or the RTP having blocked access to
				the LCMS for that user from within GPRime User Management.</wsdl:documentation>
			<wsdl:input message="tns:authenticateUserFromUsernameSoapIn" />
			<wsdl:output message="tns:authenticateUserFromUsernameSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="getGroupsContainingUser">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns a collection of Groups that a
				given User belongs to based on their User ID&lt;/b&gt;&lt;br&gt;The User ID must contain the
				truncated form of the role, ie: usr_ for non-Registrar users and reg_ for Registrar, before any
				identifying number.</wsdl:documentation>
			<wsdl:input message="tns:getGroupsContainingUserSoapIn" />
			<wsdl:output message="tns:getGroupsContainingUserSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="getInformationForGroups">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns a collection of Groups based
				on a collection of Group IDs&lt;/b&gt;</wsdl:documentation>
			<wsdl:input message="tns:getInformationForGroupsSoapIn" />
			<wsdl:output message="tns:getInformationForGroupsSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="getInformationForUsers">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns a collection of Users based on
				a collection of User IDs&lt;/b&gt;&lt;br&gt;Any empty UserBean objects indicate non-existent
				LCMS login accounts and is caused by the RTP having blocked access to the LCMS for that user
				from within GPRime User Management.</wsdl:documentation>
			<wsdl:input message="tns:getInformationForUsersSoapIn" />
			<wsdl:output message="tns:getInformationForUsersSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="getUsersInGroup">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns a collection of Users for any
				given Group based on that Group's ID&lt;/b&gt;&lt;br&gt;This method DOES NOT provide recursion
				over Groups, only direct children of the parent Group will be returned.</wsdl:documentation>
			<wsdl:input message="tns:getUsersInGroupSoapIn" />
			<wsdl:output message="tns:getUsersInGroupSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="searchGroups">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns a collection of Groups based
				on a free-text search of the Group Name&lt;/b&gt;&lt;br&gt;The free-text search does partial
				word matching, so the LCMS system can query : &lt;b&gt;reg&lt;/b&gt; to get Registrar, etc., or
				use a single &lt;b&gt;*&lt;/b&gt; to retrieve all Groups.&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;font
				color=Red&gt;This method DOES NOT support partial-wildcard matching like reg*. Please just use
				partial word matching.&lt;/font&gt;&lt;/b&gt;</wsdl:documentation>
			<wsdl:input message="tns:searchGroupsSoapIn" />
			<wsdl:output message="tns:searchGroupsSoapOut" />
		</wsdl:operation>
		<wsdl:operation name="searchUsers">
			<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;Returns a collection of Users based on
				a free-text search of the Users' Name(s)&lt;/b&gt;&lt;br&gt;The free-text search does partial
				word matching, so the LCMS system can query : &lt;b&gt;and&lt;/b&gt; to get Andrews, Anderson,
				Andy, etc. or a single &lt;b&gt;*&lt;/b&gt; to retirieve all
				Users.&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;font color=Red&gt;This method DOES NOT support
				partial-wildcard matching like smi*. Please just use partial word
				matching.&lt;/font&gt;&lt;/b&gt;</wsdl:documentation>
			<wsdl:input message="tns:searchUsersSoapIn" />
			<wsdl:output message="tns:searchUsersSoapOut" />
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="LcmsWebServiceSoap" type="tns:LcmsWebServiceSoap">
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="authenticateUser">
			<soap:operation soapAction="LcmsWebSvc/authenticateUser" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="authenticateUserFromUsername">
			<soap:operation soapAction="LcmsWebSvc/authenticateUserFromUsername" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getGroupsContainingUser">
			<soap:operation soapAction="LcmsWebSvc/getGroupsContainingUser" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getInformationForGroups">
			<soap:operation soapAction="LcmsWebSvc/getInformationForGroups" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getInformationForUsers">
			<soap:operation soapAction="LcmsWebSvc/getInformationForUsers" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getUsersInGroup">
			<soap:operation soapAction="LcmsWebSvc/getUsersInGroup" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="searchGroups">
			<soap:operation soapAction="LcmsWebSvc/searchGroups" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="searchUsers">
			<soap:operation soapAction="LcmsWebSvc/searchUsers" style="document" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:binding name="LcmsWebServiceSoap12" type="tns:LcmsWebServiceSoap">
		<soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="authenticateUser">
			<soap12:operation soapAction="LcmsWebSvc/authenticateUser" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="authenticateUserFromUsername">
			<soap12:operation soapAction="LcmsWebSvc/authenticateUserFromUsername" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getGroupsContainingUser">
			<soap12:operation soapAction="LcmsWebSvc/getGroupsContainingUser" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getInformationForGroups">
			<soap12:operation soapAction="LcmsWebSvc/getInformationForGroups" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getInformationForUsers">
			<soap12:operation soapAction="LcmsWebSvc/getInformationForUsers" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getUsersInGroup">
			<soap12:operation soapAction="LcmsWebSvc/getUsersInGroup" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="searchGroups">
			<soap12:operation soapAction="LcmsWebSvc/searchGroups" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="searchUsers">
			<soap12:operation soapAction="LcmsWebSvc/searchUsers" style="document" />
			<wsdl:input>
				<soap12:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="LcmsWebService">
		<wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">&lt;b&gt;This WebService connects TLE's LCMS to
			JAM Web Services Pty. Ltd.'s GPRime system, providing log in authentication and user management
			via TLE's UserManagementPlugin interface.&lt;/b&gt;&lt;br&gt;This WebService DOES NOT make any
			use of the submitted UserState token information at the moment but may implement
			process-authentication later.</wsdl:documentation>
		<wsdl:port name="LcmsWebServiceSoap" binding="tns:LcmsWebServiceSoap">
			<soap:address location="http://www.gpsynergy.net.au/webServices/lcms_UserManagementPlugin.asmx" />
		</wsdl:port>
		<wsdl:port name="LcmsWebServiceSoap12" binding="tns:LcmsWebServiceSoap12">
			<soap12:address location="http://www.gpsynergy.net.au/webServices/lcms_UserManagementPlugin.asmx" />
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>