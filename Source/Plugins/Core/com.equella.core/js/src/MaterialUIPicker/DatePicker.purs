module MaterialUIPicker.DatePicker where

-- This file is autogenerated from the typescript binding

import Prelude
import MaterialUI.PropTypes (Untyped)
import MaterialUI.Properties (mkProp, IProp, mkPropRecord)
import React (ReactElement, createElement, ReactClass)
import Unsafe.Coerce (unsafeCoerce)


type DatePickerPropsExt r = (
  date :: Untyped {-Identifier:MaterialUiPickersDate-},
  minDate :: Untyped {-Identifier:DateType-},
  maxDate :: Untyped {-Identifier:DateType-},
  onChange :: Untyped {-unknownType:FunctionType-},
  disablePast :: Boolean,
  disableFuture :: Boolean,
  animateYearScrolling :: Boolean,
  openToYearSelection :: Boolean,
  leftArrowIcon :: Untyped {-Identifier:ReactNode-},
  rightArrowIcon :: Untyped {-Identifier:ReactNode-},
  renderDay :: Untyped {-Identifier:RenderDay-},
  utils :: Untyped {-Identifier:Utils-},
  shouldDisableDate :: Untyped {-unknownType:FunctionType-}
  | r
) 

type DatePickerProps = DatePickerPropsExt (

) 


date :: forall r a. a -> IProp (date :: Untyped | r)
date = mkProp "date" <<< (unsafeCoerce :: a -> Untyped)

minDate :: forall r a. a -> IProp (minDate :: Untyped | r)
minDate = mkProp "minDate" <<< (unsafeCoerce :: a -> Untyped)

maxDate :: forall r a. a -> IProp (maxDate :: Untyped | r)
maxDate = mkProp "maxDate" <<< (unsafeCoerce :: a -> Untyped)

onChange :: forall r a. a -> IProp (onChange :: Untyped | r)
onChange = mkProp "onChange" <<< (unsafeCoerce :: a -> Untyped)

disablePast :: forall r. Boolean -> IProp (disablePast :: Boolean | r)
disablePast = mkProp "disablePast"

disableFuture :: forall r. Boolean -> IProp (disableFuture :: Boolean | r)
disableFuture = mkProp "disableFuture"

animateYearScrolling :: forall r. Boolean -> IProp (animateYearScrolling :: Boolean | r)
animateYearScrolling = mkProp "animateYearScrolling"

openToYearSelection :: forall r. Boolean -> IProp (openToYearSelection :: Boolean | r)
openToYearSelection = mkProp "openToYearSelection"

leftArrowIcon :: forall r a. a -> IProp (leftArrowIcon :: Untyped | r)
leftArrowIcon = mkProp "leftArrowIcon" <<< (unsafeCoerce :: a -> Untyped)

rightArrowIcon :: forall r a. a -> IProp (rightArrowIcon :: Untyped | r)
rightArrowIcon = mkProp "rightArrowIcon" <<< (unsafeCoerce :: a -> Untyped)

renderDay :: forall r a. a -> IProp (renderDay :: Untyped | r)
renderDay = mkProp "renderDay" <<< (unsafeCoerce :: a -> Untyped)

utils :: forall r a. a -> IProp (utils :: Untyped | r)
utils = mkProp "utils" <<< (unsafeCoerce :: a -> Untyped)

shouldDisableDate :: forall r a. a -> IProp (shouldDisableDate :: Untyped | r)
shouldDisableDate = mkProp "shouldDisableDate" <<< (unsafeCoerce :: a -> Untyped)

foreign import datePickerClass :: forall props. ReactClass props

datePickerU :: forall props. props -> Array ReactElement -> ReactElement
datePickerU = createElement datePickerClass

datePicker :: Array (IProp DatePickerProps) -> ReactElement
datePicker = mkPropRecord >>> datePickerU >>> (#) []

