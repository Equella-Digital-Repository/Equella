<xml><markup>&lt;div class=&quot;ctrlbody&quot;&gt;

&lt;#-- render a button to force resizing of images --&gt;
&lt;input id=&quot;${prefix}resizeImages&quot; name=&quot;${prefix}resizeImages&quot; type=&quot;submit&quot; value=&quot;Resize Images!&quot; onclick=&quot;${submitJavascript}&quot; style=&quot;background-color:#FF0000; color: #FFFFFF; width:200px; height:60px;&quot;&gt;
Halves the width and height of all image attachments on this item.

&lt;#-- list all the resized images since the last page submission --&gt;
&lt;#list attributes.getAllSubtrees('resized') as resized&gt;
	&lt;img src=&quot;${previewUrlBase}${resized.get('attachmentName')}&quot; alt=&quot;${resized.get('attachmentName')}&quot;&gt;

	&lt;h3&gt;Attachment ${resized.get('attachmentName')} was resized&lt;/h3&gt;
	&lt;br&gt;Resized From: ${resized.get('fromWidth')} x ${resized.get('fromHeight')}
	&lt;br&gt;Resized To: ${resized.get('toWidth')} x ${resized.get('toHeight')}
&lt;/#list&gt;

&lt;/div&gt;

&lt;#-- cleanup the XML --&gt;
${attributes.deleteAll('resized')}</markup><onload/><onsubmit>return true;</onsubmit><load/><store>function resizeImages()
{
	//list all the current attachments and loop through them
	var attachList = attachments.list();
	for (var i=0; i &lt; attachList.size(); i++)
	{
		var attach = attachList.get(i);

		//the filename of the attachment (e.g. myfile.jpg)
		var filename = attach.getFilename();

		//get the MIME type for this attachment
		var mimeType = mime.getMimeTypeForFilename(filename).getType();
	
		//is it an image type?
		if (mimeType.match('image/'))
		{
			//get the size of the image
			var dimensions = images.getDimensions(filename);
			var width = dimensions.getWidth();
			var height = dimensions.getHeight();

			//create a new temporary image of half the size
			images.resize(filename, width/2, height/2, 'TEMPIMAGE');

			//delete the original image
			staging.deleteFile(filename);

			//rename the temporary image (back to the original filename)
			staging.move('TEMPIMAGE', filename);

			//add information to the XML so we can provide feedback to the user
			var resizeInfo = attributes.createSubtree('resized');
			resizeInfo.set('attachmentName', filename);
			resizeInfo.set('fromWidth', width);
			resizeInfo.set('fromHeight', height);
			resizeInfo.set('toWidth', width/2);
			resizeInfo.set('toHeight', height/2);
		}
	}
}

//detect if the Resize Images! button was pressed
if (request.get('resizeImages') != null)
{
	resizeImages();
}</store><notes>Image resize script using:
- the 'attributes' object to pass information between scripts 
- the 'previewUrlBase' variable to view the resized images
- the 'submitJavascript' to perform a form submission on button click
- the 'request' object to detect if a button has been pressed

</notes></xml>